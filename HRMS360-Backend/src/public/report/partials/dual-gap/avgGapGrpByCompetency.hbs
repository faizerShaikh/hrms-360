<script>
  const renderCompetencyChart = (id, self,avg) => {
  let options = {
      chart: {
        type: "bar",
        toolbar: {
          show: false,
        },
        height: 120,
        width: 380,
        animations: {
          enabled: false,
        },
      },
      series: [
        { name: "Self Gap Rating", data: [self=== 0?0.0001:self.toFixed(2)] },
        { name: "Average Gap Rating", data: [avg === 0 ? 0.0001 : avg.toFixed(2)] },
      ],
      tooltip: {
        enabled: false,
      },
      grid: {
        show: true,
        strokeDashArray: 5,
        xaxis: {
          lines: {
            show: true,
          },
        },
        yaxis: {
          lines: {
            show: false,
          },
        },
      },
      stroke: {
        colors: ["transparent"],
        width: 3,
      },
      plotOptions: {
        bar: {
          borderRadius: 0,
          horizontal: true,
          barHeight: "100%",
          rangeBarGroupRows: false,
          dataLabels: {
            position: "top",
          },
        },
      },
      dataLabels: {
        enabled: true,
        offsetX: 34,
        formatter:(val)=>{
          return val === 0.0001 ? "0.00" : isNaN(val) ? "0.00" : val.toFixed(2);
        },
        style: {
          fontSize: "12px",
          fontFamily: "Helvetica, Arial, sans-serif",
          fontWeight: 400,
          colors: ["#000000"],
        },
      },
      legend: {
        show: false,
      },
      yaxis: {
        show: false,
        max: 5,
        tickAmount: 4,
        labels: {
          show: true,
          align: "right",
          style: {
            colors: "#52606d",
            fontSize: "14px",
            fontFamily: '"Urbanist", "sans-serif"',
          },
        },
      },
      colors: ["#3786EE", "#D7E7FC"],
      xaxis: {
        categories: ["sdadasd"],
        axisBorder: {
          show: true,
        },
        labels: {
          style: {
            colors: "#52606d",
            fontSize: "14px",
            fontFamily: '"Urbanist", "sans-serif"',
          },
        },
      },
    };

    var chart = new ApexCharts(
      document.querySelector("#" + id),
      options
    );
    chart.render();
  };
</script>

  <div class="dont-break break-inside-avoid-page w-full  min-h-[1044px] h-fit mx-auto  p-5">
  <div class="relative h-full">
    {{> dual-gap/cornerFrames }}
    <div class="bg-primary-light text-primary font-urbanist font-semibold p-2 text-base uppercase">
      Average Gap size against Self Gap Grouped by Competency
    </div>

    <div >
      {{#each arrayData.competencyData as |competency|}}
      <div class="  border-b border-b-[#1C9CF629] mt-10 mb-3 pb-1 flex justify-between items-center">
        <div class="text-primary uppercase text-base font-urbanist font-semibold">{{competency.name}}</div>
        <div class="flex justify-between items-center ">
          <div class="flex justify-between items-center mr-2">
            <div class="w-5 h-2 mr-2 bg-[#3786EE]"></div>
            <div class="text-xs text-neutral-600">Self Gap Size</div>
          </div>
          <div class="flex justify-between items-center">
            <div class="w-5 h-2 mr-2 bg-[#DBECF8]"></div>
            <div class="text-xs text-neutral-600">Average Gap Size</div>
          </div>
        </div>
      </div>
        <div class="p-3 h-full">
          {{#each competency.questionsData as | question |}}
            <div class="flex  items-center">
              {{!-- <div class="w-1/2  text-sm font-inter" style="color:#525252">Q{{question.question_order}}. {{question.text}}</div> --}}
              <div class="w-1/2  text-sm font-inter" style="color:#525252">Q{{findIndexofText ../../arrayData.sortedArray question.id}}. {{question.text}}</div>
              <div class="w-1/2" style="margin-left: 60px;" id={{concat "avgGapCompetency-" competency.compIndex @index}}></div>
                <script>
                   renderCompetencyChart("avgGapCompetency-" + {{competency.compIndex}} + {{@index}},{{question.self_avg}},{{question.avg_gap}})
                </script>
            </div>
          {{/each}}
        </div>
    
      {{/each}}
    </div>
  </div>
</div>
